{"version":3,"sources":["components/TodoListFooter/TodoListFooter.module.scss","components/TodoListHeader/TodoListHeader.module.scss","components/TodoListTasks/TodoListTask/TodoListTask.module.scss","components/TodoListTasks/TodoListTasks.module.scss","components/TodoListFooter/TodoListFooter.js","components/TodoListTasks/TodoListTask/TodoListTask.js","components/TodoListTasks/TodoListTasks.js","components/TodoListHeader/TodoListHeader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","todoList__footer","footer__button","footer__button-active","footer__buttons","todoList__header","header__input","error","header__buttons","checkbox","done","TodoList__tasks","TodoListFooter","state","isHidden","onAllFilterClick","_this","props","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","setState","onHideFiltersClick","render","classForAll","filterValue","classForCompleted","classForActive","react_default","a","createElement","className","styles","Fragment","onClick","concat","React","Component","TodoListTask","onIsDoneChanged","e","onTaskChangeStatus","task","currentTarget","checked","isDone","onChange","type","title","priority","TodolistTasks","taskElements","tasks","map","item","index","TodoListTasks_TodoListTask_TodoListTask","key","TodoListHeader","Object","classCallCheck","this","_super","call","onAddTaskClick","text","taskText","includes","lastIndexOf","slice","substring","length","alert","addNewTask","onKeyPressInputValue","onChangeInputValue","newValue","target","value","placeholder","onKeyPress","App","newText","newTask","newTasks","toConsumableArray","objectSpread2","newFilterValue","window","components_TodoListHeader_TodoListHeader","TodoListTasks","filter","components_TodoListFooter_TodoListFooter","newTaskTitleRef","createRef","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49af414c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList__footer\":\"TodoListFooter_todoList__footer__3m-_8\",\"footer__button\":\"TodoListFooter_footer__button__3jLmO\",\"footer__button-active\":\"TodoListFooter_footer__button-active__u9FWn\",\"footer__buttons\":\"TodoListFooter_footer__buttons__K8NYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList__header\":\"TodoListHeader_todoList__header__33SYf\",\"header__input\":\"TodoListHeader_header__input__qmxUP\",\"error\":\"TodoListHeader_error__1ElEi\",\"header__buttons\":\"TodoListHeader_header__buttons__3hqAw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"TodoListTask_checkbox__3y-qn\",\"done\":\"TodoListTask_done__1YEOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList__tasks\":\"TodoListTasks_TodoList__tasks__1lFmV\"};","import React from 'react';\r\nimport styles from './TodoListFooter.module.scss';\r\n\r\nclass TodoListFooter extends React.Component {\r\n\r\n    state={\r\n        isHidden: false,\r\n    }\r\n\r\n    onAllFilterClick = () => {\r\n        this.props.changeFilter('All')\r\n    }\r\n    onCompletedFilterClick = () => {\r\n        this.props.changeFilter('Completed')\r\n    }\r\n    onActiveFilterClick = () => {\r\n        this.props.changeFilter('Active')\r\n    }\r\n    onShowFiltersClick = () => {\r\n        this.setState(\r\n            {\r\n                isHidden: false\r\n            }\r\n        )\r\n    }\r\n    onHideFiltersClick = () => {\r\n        this.setState(\r\n            {\r\n                isHidden: true\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    render = () => {\r\n        const classForAll = this.props.filterValue === \"All\" ? \"footer__button-active\" : \"\";\r\n        const classForCompleted = this.props.filterValue === \"Completed\" ? \"footer__button-active\" : \"\";\r\n        const classForActive = this.props.filterValue === \"Active\" ? \"footer__button-active\" : \"\";\r\n        return (\r\n            <div className={styles.todoList__footer}>\r\n                { !this.state.isHidden  &&  <>\r\n                    <button onClick={this.onAllFilterClick}\r\n                            className={`${styles.footer__button} ${styles[classForAll]}`}>\r\n                        All\r\n                    </button>\r\n                    <button onClick={this.onCompletedFilterClick}\r\n                            className={`${styles.footer__button} ${styles[classForCompleted]}`}>\r\n                        Completed\r\n                    </button>\r\n                    <button onClick={this.onActiveFilterClick } className={`${styles.footer__button} ${styles[classForActive]}`}>\r\n                        Active\r\n                    </button>\r\n                </>\r\n                }\r\n                <button onClick={this.state.isHidden ? this.onShowFiltersClick : this.onHideFiltersClick}\r\n                        className={`${styles.footer__button}`}>\r\n                    {this.state.isHidden ? 'Show' : 'Hide'}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListFooter","import React from 'react';\r\nimport styles from './TodoListTask.module.scss';\r\n\r\nclass TodoListTask extends React.Component {\r\n\r\n    onIsDoneChanged = (e)=>{\r\n        this.props.onTaskChangeStatus(this.props.task, e.currentTarget.checked)\r\n    }\r\n    render = () => {\r\n\r\n        return (\r\n                <div className={` ${this.props.task.isDone && styles.done}`}>\r\n                    <input className={`${styles['checkbox']}`}\r\n                           onChange={this.onIsDoneChanged}\r\n                           type=\"checkbox\"\r\n                           checked={this.props.task.isDone}/>\r\n                    <span>{this.props.task.title}</span><span> - priority: {this.props.task.priority}</span>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTask;","import React from 'react';\r\nimport styles from './TodoListTasks.module.scss';\r\nimport TodoListTask from \"./TodoListTask/TodoListTask\";\r\n\r\n\r\n\r\nclass TodolistTasks extends React.Component {\r\n\r\n    render = (props) => {\r\n        const taskElements = this.props.tasks.map((item,index) =>(\r\n        <TodoListTask  task={item} onTaskChangeStatus={this.props.onTaskChangeStatus} key={index}/>));\r\n        return (\r\n            <div className={styles.TodoList__tasks}>\r\n               {taskElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodolistTasks;","import React from 'react';\r\nimport styles from './TodoListHeader.module.scss';\r\n\r\nclass TodoListHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    state = {\r\n        error: false,\r\n        title: ''\r\n    }\r\n\r\n    onAddTaskClick = (e) => {\r\n        let taskText = this.state.title;\r\n        this.setState({\r\n            title: ''\r\n        })\r\n        let priority;\r\n        let text;\r\n        if (taskText.includes('::')) {\r\n            let index = taskText.lastIndexOf('::');\r\n            text = taskText.slice(0, index);\r\n            priority = taskText.substring(taskText.length, index + 2)\r\n        } else {\r\n            text = taskText\r\n            priority = 'low'\r\n        }\r\n        if (taskText === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n            alert('Please write the task')\r\n        } else {\r\n            this.props.addNewTask(text, priority)\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n    }\r\n    onKeyPressInputValue=(e)=>{\r\n        if(e.key === 'Enter'){\r\n            this.onAddTaskClick()\r\n        }\r\n    }\r\n    onChangeInputValue=(e)=>{\r\n        let newValue = e.target.value;\r\n        this.setState({\r\n            title: newValue\r\n        })\r\n    }\r\n    render = () => {\r\n        return (\r\n            <div className={styles.todoList__header}>\r\n                <h3 className=\"todoList-header__title\">What to Learn</h3>\r\n                <div className=\"todoList-header__title\">Example: <br/> <h4>task::priority</h4></div>\r\n                <div className=\"todoList-newTaskForm\">\r\n                    <input className={`${styles.header__input} ${this.state.error && styles.error}`}\r\n                           type=\"text\"\r\n                           placeholder=\"New task name\"\r\n                           value={this.state.title}\r\n                           onKeyPress={this.onKeyPressInputValue}\r\n                           onChange={this.onChangeInputValue}\r\n                    />\r\n                    <button onClick={this.onAddTaskClick} className={styles.header__buttons}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListHeader","import React from 'react';\r\nimport './App.scss';\r\nimport TodoListFooter from \"./components/TodoListFooter/TodoListFooter\";\r\nimport TodoListTasks from \"./components/TodoListTasks/TodoListTasks\";\r\nimport TodoListHeader from \"./components/TodoListHeader/TodoListHeader\";\r\nimport styles from \"./components/TodoListHeader/TodoListHeader.module.scss\";\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.newTaskTitleRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        tasks: [\r\n            {title: 'CSS', isDone: true, priority: 'low',},\r\n            {title: 'JS', isDone: false, priority: 'medium',},\r\n            {title: 'ReactJS', isDone: false, priority: 'high',},\r\n            {title: 'Patterns', isDone: true, priority: 'low',},\r\n        ],\r\n        filterValue: 'All'\r\n    }\r\n    addNewTask = (newText, priority) => {\r\n        let newTask = {title: newText, isDone: false, priority: priority}\r\n        let newTasks = [...this.state.tasks, newTask]\r\n        this.setState({\r\n            tasks: newTasks\r\n        })\r\n    }\r\n    onTaskChangeStatus = (task, isDone) => {\r\n\r\n        let newTasks = this.state.tasks.map(item => {\r\n            if (item !== task) {\r\n                return item\r\n            } else {\r\n                return {...item, isDone: isDone}\r\n            }\r\n        })\r\n        this.setState({\r\n            tasks: newTasks\r\n        })\r\n    }\r\n\r\n    changeFilter = (newFilterValue) => (this.setState({filterValue: newFilterValue}))\r\n    render = () => {\r\n        window.state = this.state\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"todoList\">\r\n                    <TodoListHeader addNewTask={this.addNewTask}/>\r\n                    <TodoListTasks\r\n                        tasks={this.state.tasks.filter(task => {\r\n                            switch (this.state.filterValue) {\r\n                                case 'All':\r\n                                    return true\r\n                                case 'Active':\r\n                                    return !task.isDone\r\n                                case 'Completed':\r\n                                    return task.isDone\r\n                                default:\r\n                                    return true\r\n                            }\r\n                        })}\r\n                        onTaskChangeStatus={this.onTaskChangeStatus}\r\n                    />\r\n                    <TodoListFooter filterValue={this.state.filterValue} changeFilter={this.changeFilter}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}