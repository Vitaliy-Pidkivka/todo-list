{"version":3,"sources":["components/TodoListTasks/TodoListTask/TodoListTask.module.scss","components/TodoListHeader/TodoListHeader.module.scss","components/AddNewItemForm/AddNewItemForm.module.scss","components/shared/Button/Button.module.scss","components/TodoListFooter/TodoListFooter.module.scss","components/TodoListTasks/TodoListTasks.module.scss","components/shared/RemoveBtn/RemoveBtn.module.scss","components/shared/Button/Button.jsx","components/TodoListFooter/TodoListFooter.jsx","components/shared/RemoveBtn/RemoveBtn.jsx","components/TodoListTasks/TodoListTask/TodoListTask.jsx","components/TodoListTasks/TodoListTasks.jsx","components/AddNewItemForm/AddNewItemForm.jsx","components/TodoListHeader/TodoListHeader.jsx","components/TodoList/TodoList.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","task","checkbox","done","todoList__header","todoList__example","remove-task","addNewItemForm__input","error","button","active","todoList__footer","TodoList__tasks","remove","Button","react_default","a","createElement","onClick","this","props","className","concat","styles","value","React","Component","TodoListFooter","state","isHidden","onAllFilterClick","_this","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","setState","onHideFiltersClick","render","Fragment","shared_Button_Button","filterValue","RemoveBtn","TodoListTask","editMode","onIsDoneChanged","e","changeTask","id","isDone","currentTarget","checked","activateEditMode","disableEditMode","onTitleChanged","title","onRemoveTask","removeTask","onDoubleClick","onChange","type","priority","shared_RemoveBtn_RemoveBtn","onBlur","autoFocus","TodoListTasks","taskElements","tasks","map","item","TodoListTasks_TodoListTask_TodoListTask","key","AddNewItemForm","onChangeInputValue","newInputValue","addNewItemForm","placeholder","onKeyPress","TodoListHeader","onAddTaskClick","text","taskText","includes","index","lastIndexOf","slice","substring","length","alert","addNewTask","onKeyPressInputValue","onRemoveTodoList","removeTodoList","todolistId","components_AddNewItemForm_AddNewItemForm","TodoList","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","getItem","parse","newTaskId","newText","newTask","Object","toConsumableArray","taskId","obj","newTasks","objectSpread2","newFilterValue","filter","components_TodoListHeader_TodoListHeader","components_TodoListTasks_TodoListTasks","components_TodoListFooter_TodoListFooter","App","todoLists","newTodoListName","todo","newTodoListId","addNewTodoList","newTodoLIst","changeNewTodoListName","newName","todoListId","newTodoLists","window","tl","components_TodoList_TodoList","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.097f5358.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TodoListTask_task__3PpBP\",\"checkbox\":\"TodoListTask_checkbox__3y-qn\",\"done\":\"TodoListTask_done__1YEOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList__header\":\"TodoListHeader_todoList__header__33SYf\",\"todoList__example\":\"TodoListHeader_todoList__example__1YkUP\",\"remove-task\":\"TodoListHeader_remove-task__2CPZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNewItemForm__input\":\"AddNewItemForm_addNewItemForm__input__1_vFe\",\"error\":\"AddNewItemForm_error__29nm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__8eCn0\",\"active\":\"Button_active__2Deuc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList__footer\":\"TodoListFooter_todoList__footer__3m-_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList__tasks\":\"TodoListTasks_TodoList__tasks__1lFmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remove\":\"RemoveBtn_remove__34-Ew\"};","import styles from \"./Button.module.scss\";\r\nimport React from \"react\";\r\n\r\n\r\nclass Button extends React.Component {\r\n    render() {\r\n        return <button onClick={this.props.onClick}\r\n                       className={`${styles.button} ${this.props.active && styles.active }\r\n                        ${this.props.className && this.props.className}`}>\r\n            {this.props.value}\r\n        </button>;\r\n    }\r\n}\r\n\r\nexport default Button\r\n\r\n","import React from 'react';\r\nimport styles from './TodoListFooter.module.scss';\r\nimport Button from \"../shared/Button/Button\";\r\n\r\nclass TodoListFooter extends React.Component {\r\n\r\n    state = {\r\n        isHidden: false,\r\n    }\r\n\r\n    onAllFilterClick = () => {\r\n        this.props.changeFilter('All')\r\n    }\r\n    onCompletedFilterClick = () => {\r\n        this.props.changeFilter('Completed')\r\n    }\r\n    onActiveFilterClick = () => {\r\n        this.props.changeFilter('Active')\r\n    }\r\n    onShowFiltersClick = () => {\r\n        this.setState(\r\n            {\r\n                isHidden: false\r\n            }\r\n        )\r\n    }\r\n    onHideFiltersClick = () => {\r\n        this.setState(\r\n            {\r\n                isHidden: true\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.todoList__footer}>\r\n                {!this.state.isHidden && <>\r\n                    <Button onClick={this.onAllFilterClick}\r\n                            value={'All'}\r\n                            active={this.props.filterValue === \"All\"}/>\r\n                    <Button onClick={this.onCompletedFilterClick}\r\n                            value={'Completed'}\r\n                            active={this.props.filterValue === \"Completed\"}/>\r\n                    <Button onClick={this.onActiveFilterClick}\r\n                            value={'Active'}\r\n                            active={this.props.filterValue === \"Active\"}/>\r\n\r\n                </>\r\n                }\r\n                <Button onClick={this.state.isHidden ? this.onShowFiltersClick : this.onHideFiltersClick}\r\n                        value={ this.state.isHidden ? 'Show' : 'Hide'}\r\n                        active={this.props.filterValue === \"hide\"}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListFooter","import React from 'react';\r\nimport styles from \"./RemoveBtn.module.scss\";\r\n\r\nclass RemoveBtn extends React.Component {\r\n    render() {\r\n        return <button onClick={this.props.onClick}\r\n                       className={`${styles[\"remove\"]} ${this.props.className && this.props.className}`}>&times;</button>;\r\n    }\r\n}\r\n\r\nexport  default  RemoveBtn","import React from 'react';\r\nimport styles from './TodoListTask.module.scss';\r\nimport RemoveBtn from \"../../shared/RemoveBtn/RemoveBtn\";\r\n\r\n\r\n\r\nclass TodoListTask extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n    }\r\n    onIsDoneChanged = (e) => {\r\n        this.props.changeTask(this.props.task.id, {isDone: e.currentTarget.checked})\r\n    }\r\n    activateEditMode = () =>{\r\n        this.setState({ editMode: true,   })\r\n    }\r\n    disableEditMode = () =>{\r\n        this.setState({   editMode: false,   })\r\n    }\r\n    onTitleChanged =(e)=>{\r\n        this.props.changeTask(this.props.task.id, {title:e.currentTarget.value})\r\n    }\r\n    onRemoveTask = () =>{\r\n        this.props.removeTask(this.props.task.id)\r\n    }\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={`${styles.task} ${this.props.task.isDone && styles.done}` }\r\n           onDoubleClick={this.activateEditMode}\r\n            >\r\n                <div>\r\n                    {!this.state.editMode &&  <div>\r\n                        <input className={`${styles['checkbox']}`}\r\n                               onChange={this.onIsDoneChanged}\r\n                               type=\"checkbox\"\r\n                               checked={this.props.task.isDone}/>\r\n                        <span>{this.props.task.id +\r\n                        1}: {this.props.task.title}</span><span> - priority: {this.props.task.priority}</span>\r\n                        <RemoveBtn onClick={this.onRemoveTask}/>\r\n                    </div>}\r\n                    {this.state.editMode &&  <div>\r\n                        {this.props.task.id + 1}: <input type=\"text\"\r\n                                                         onBlur={this.disableEditMode}\r\n                                                         onChange={this.onTitleChanged}\r\n                                                         autoFocus={true}\r\n                                                         value={this.props.task.title}\r\n\r\n                    />\r\n                    </div>}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTask;","import React from 'react';\r\nimport styles from './TodoListTasks.module.scss';\r\nimport TodoListTask from \"./TodoListTask/TodoListTask\";\r\n\r\n\r\n\r\nclass TodoListTasks extends React.Component {\r\n\r\n    render = () => {\r\n        const taskElements = this.props.tasks.map((item) =>(\r\n        <TodoListTask  task={item}\r\n                       changeTask={this.props.changeTask}\r\n                       removeTask={this.props.removeTask}\r\n                       key={item.id}/>));\r\n        return (\r\n            <div className={styles.TodoList__tasks}>\r\n               {taskElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;","import styles from \"./AddNewItemForm.module.scss\";\r\nimport React from \"react\";\r\nimport Button from \"../shared/Button/Button\";\r\n\r\nclass AddNewItemForm extends React.Component {\r\n    onChangeInputValue = (e) => {\r\n        let newInputValue = e.currentTarget.value\r\n        this.props.onChange(newInputValue)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.addNewItemForm}>\r\n                <input className={`${styles.addNewItemForm__input} ${this.props.error && styles.error}`}\r\n                       type=\"text\"\r\n                       placeholder={this.props.placeholder}\r\n                       value={this.props.value}\r\n                       onKeyPress={this.props.onKeyPress}\r\n                       onChange={this.onChangeInputValue}\r\n                />\r\n                <Button value={'Add'} onClick={this.props.onClick}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNewItemForm;\r\n","import React from 'react';\r\nimport styles from './TodoListHeader.module.scss';\r\nimport AddNewItemForm from \"../AddNewItemForm/AddNewItemForm\";\r\nimport RemoveBtn from \"../shared/RemoveBtn/RemoveBtn\";\r\n\r\nclass TodoListHeader extends React.Component {\r\n    state = {\r\n        error: false,\r\n        value: ''\r\n    }\r\n\r\n    onAddTaskClick = () => {\r\n        let taskText = this.state.value;\r\n        this.setState({\r\n            value: ''\r\n        })\r\n        let priority;\r\n        let text;\r\n        if (taskText.includes('::')) {\r\n            let index = taskText.lastIndexOf('::');\r\n            text = taskText.slice(0, index);\r\n            priority = taskText.substring(taskText.length, index + 2)\r\n        } else {\r\n            text = taskText\r\n            priority = 'low'\r\n        }\r\n        if (taskText === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n            alert('Please write the task name')\r\n        } else {\r\n            this.props.addNewTask(text, priority)\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n    }\r\n    onKeyPressInputValue = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.onAddTaskClick()\r\n        }\r\n    }\r\n    onChangeInputValue = (value) => {\r\n        this.setState({\r\n            value: value\r\n        })\r\n    }\r\n    onRemoveTodoList =()=>{\r\n        this.props.removeTodoList(this.props.todolistId)\r\n    }\r\n    render = () => {\r\n        return (\r\n            <div className={styles.todoList__header}>\r\n                <RemoveBtn onClick={this.onRemoveTodoList} className={styles['remove-task']}/>\r\n                <h1 className=\"todoList-header__title\">{this.props.title}</h1>\r\n                <div className={styles.todoList__example} >Example:  <span >task::priority</span></div>\r\n                <AddNewItemForm onClick={this.onAddTaskClick}\r\n                                onChange={this.onChangeInputValue}\r\n                                onKeyPress={this.onKeyPressInputValue}\r\n                                value={this.state.value}\r\n                                placeholder='Add new task'\r\n                                error={this.state.error}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListHeader","import React from 'react';\r\nimport TodoListFooter from \"../TodoListFooter/TodoListFooter\";\r\nimport TodoListTasks from \"../TodoListTasks/TodoListTasks\";\r\nimport TodoListHeader from \"../TodoListHeader/TodoListHeader\";\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.restoreState();\r\n    }\r\n\r\n    saveState = () => {\r\n        let stateAsString = JSON.stringify(this.state)\r\n        localStorage.setItem(`our-state ${this.props.id}`, stateAsString)\r\n    }\r\n    restoreState = () => {\r\n        let state = {\r\n            tasks: [],\r\n            filterValue: 'All'\r\n        }\r\n        let stateAsString = localStorage.getItem(`our-state ${this.props.id}`)\r\n        if (stateAsString != null) {\r\n            state = JSON.parse(stateAsString)\r\n        }\r\n        if (state.tasks.length !== 0) {\r\n            state.tasks.map(task => {\r\n                if(task.id >= this.newTaskId){\r\n                    this.newTaskId = task.id + 1\r\n                }\r\n            })\r\n        } else {\r\n            this.newTaskId = 0\r\n        }\r\n        this.setState(state);\r\n    }\r\n    state = {\r\n        tasks: [],\r\n        filterValue: 'All'\r\n    }\r\n    newTaskId = 0\r\n    addNewTask = (newText, priority) => {\r\n        let newTask = {id: this.newTaskId, title: newText, isDone: false, priority: priority}\r\n        this.newTaskId++\r\n        this.setState({\r\n            tasks: [...this.state.tasks, newTask]\r\n        }, () => this.saveState())\r\n    }\r\n    changeTask = (taskId, obj) => {\r\n        let newTasks = this.state.tasks.map(task => {\r\n            if (task.id !== taskId) {\r\n                return task\r\n            } else {\r\n                return {...task, ...obj}\r\n            }\r\n        })\r\n        this.setState({\r\n            tasks: newTasks\r\n        }, () => this.saveState())\r\n\r\n    }\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({filterValue: newFilterValue}, () => this.saveState())\r\n    }\r\n    removeTask = (taskId) => {\r\n        let newTasks = this.state.tasks.filter(task => task.id !== taskId)\r\n        this.setState({\r\n            tasks: newTasks\r\n        }, () => {\r\n            this.saveState()\r\n        })\r\n    }\r\n    render = () => {\r\n        return (\r\n            <div className=\"todoList\">\r\n                <TodoListHeader title={this.props.title}\r\n                                addNewTask={this.addNewTask}\r\n                                removeTodoList={this.props.removeTodoList}\r\n                                todolistId={this.props.id}\r\n                />\r\n                <TodoListTasks\r\n                    tasks={this.state.tasks.filter(task => {\r\n                        switch (this.state.filterValue) {\r\n                            case 'All':\r\n                                return true\r\n                            case 'Active':\r\n                                return !task.isDone\r\n                            case 'Completed':\r\n                                return task.isDone\r\n                            default:\r\n                                return true\r\n                        }\r\n                    })}\r\n                    changeTask={this.changeTask}\r\n                    removeTask={this.removeTask}\r\n                />\r\n                <TodoListFooter filterValue={this.state.filterValue}\r\n                                changeFilter={this.changeFilter}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TodoList;\r\n\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport TodoList from \"./components/TodoList/TodoList\";\r\nimport AddNewItemForm from \"./components/AddNewItemForm/AddNewItemForm\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.restoreState();\r\n    }\r\n\r\n    saveState = () => {\r\n        let stateAsString = JSON.stringify(this.state)\r\n        localStorage.setItem(`our-app-state`, stateAsString)\r\n    }\r\n    restoreState = () => {\r\n        let state = {\r\n            todoLists: [],\r\n            newTodoListName: ''\r\n        }\r\n        let stateAsString = localStorage.getItem(`our-app-state`)\r\n        if (stateAsString != null) {\r\n            state = JSON.parse(stateAsString)\r\n        }\r\n        if (state.todoLists.length !== 0) {\r\n            state.todoLists.map(todo => {\r\n                if(todo.id > this.newTodoListId){\r\n                    this.newTodoListId = todo.id\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.newTodoListId = 0\r\n        }\r\n        this.setState(state);\r\n    }\r\n    newTodoListId = 0\r\n    state = {\r\n        todoLists: [],\r\n        newTodoListName: 'Clear TodoList'\r\n    }\r\n    addNewTodoList = () => {\r\n        let newTodoLIst = {\r\n            id: this.newTodoListId + 1,\r\n            title: this.state.newTodoListName\r\n        }\r\n        this.newTodoListId++\r\n        this.setState({todoLists: [...this.state.todoLists, newTodoLIst], newTodoListName: ''}, () => this.saveState())\r\n    }\r\n    changeNewTodoListName = (newName) => {\r\n        this.setState({newTodoListName: newName})\r\n    }\r\n    onKeyPressInputValue = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.addNewTodoList()\r\n        }\r\n    }\r\n    removeTodoList =(todoListId) =>{\r\n        let newTodoLists = this.state.todoLists.filter(todo => todo.id !== todoListId)\r\n        this.setState({\r\n            todoLists: newTodoLists\r\n        },()=>{this.saveState()})\r\n    }\r\n    render = () => {\r\n        window.state = this.state\r\n        return (\r\n            <div className=\"App\">\r\n                <AddNewItemForm onClick={this.addNewTodoList}\r\n                                onChange={this.changeNewTodoListName}\r\n                                onKeyPress={this.onKeyPressInputValue}\r\n                                placeholder='Create new TodoList'\r\n                                value={this.state.newTodoListName}\r\n\r\n                               />\r\n                               <div className='todoLists'>\r\n                                   {this.state.todoLists.map(tl => <TodoList id={tl.id}\r\n                                                                             title={tl.title}\r\n                                                                             key={tl.id}\r\n                                                                             removeTodoList={this.removeTodoList}\r\n                                   />)}\r\n\r\n                               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}